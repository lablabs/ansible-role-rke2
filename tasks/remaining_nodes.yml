---

- name: Create the RKE2 config dir
  ansible.builtin.file:
    state: directory
    path: /etc/rancher/rke2
    owner: root
    group: root
    mode: 0755

- name: Set server taints
  ansible.builtin.set_fact:
    combined_node_taints: "{{ rke2_server_node_taints }}"
  when: rke2_type == 'server'

- name: Set agent taints
  ansible.builtin.set_fact:
    combined_node_taints: "{{ rke2_agent_node_taints }}"
  when: rke2_type == 'agent'

- name: Copy RKE2 config
  ansible.builtin.template:
    src: "{{ rke2_config }}"
    dest: /etc/rancher/rke2/config.yaml
    owner: root
    group: root
    mode: 0600
  notify: "Config file changed"

- name: Copy Containerd Registry Configuration file
  ansible.builtin.template:
    src: "{{ rke2_custom_registry_path }}"
    dest: /etc/rancher/rke2/registries.yaml
    owner: root
    group: root
    mode: 0600
  when: (rke2_custom_registry_mirrors | length > 0 or rke2_custom_registry_configs | length > 0)
  notify: "Config file changed"

- name: Start RKE2 service on the rest of the nodes
  ansible.builtin.systemd:
    name: "{{ rke2_service_name }}"
    state: started
    enabled: true
  retries: 10
  delay: 3
  register: result
  until: result is not failed
  environment:
    RKE2_TOKEN: "{{ rke2_token }}"
  notify: "Service (re)started"

- name: Mask other RKE2 service on the rest of the nodes
  ansible.builtin.systemd:
    name: "rke2-{{ item }}.service"
    enabled: false
    masked: true
  with_items:
    - "{{ (['agent', 'server'] | reject('match', rke2_type) | list) }}"

- name: Wait for remaining nodes to be ready - no CNI
  ansible.builtin.shell: |
    {{ rke2_data_path }}/bin/kubectl --kubeconfig /etc/rancher/rke2/rke2.yaml get node "{{ item }}" -o jsonpath='{range .status.conditions[*]}{.message}{"\n"}{end}'
  args:
    executable: /bin/bash
  changed_when: false
  register: node_status
  until:
    - '"kubelet has sufficient memory available"  in node_status.stdout_lines'
    - '"kubelet has no disk pressure"  in node_status.stdout_lines'
    - '"kubelet has sufficient PID available"  in node_status.stdout_lines'
    - ('"cni plugin not initialized" in node_status.stdout' or '"kubelet is posting ready status." in node_status.stdout')
  retries: 100
  delay: 15
  loop: "{{ groups[rke2_cluster_group_name] }}"
  delegate_to: "{{ active_server | default(groups[rke2_servers_group_name].0) }}"
  run_once: true
  when: rke2_cni == 'none'

- name: Wait for remaining nodes to be ready - with CNI
  ansible.builtin.shell: |
    set -o pipefail
    {{ rke2_data_path }}/bin/kubectl --kubeconfig /etc/rancher/rke2/rke2.yaml get nodes | grep " Ready" | wc -l
  args:
    executable: /bin/bash
  changed_when: false
  register: all_ready_nodes
  until:
    "groups[rke2_cluster_group_name] | length == all_ready_nodes.stdout | int"
  retries: 100
  delay: 15
  delegate_to: "{{ active_server | default(groups[rke2_servers_group_name].0) }}"
  run_once: true
  when: rke2_cni != 'none'
