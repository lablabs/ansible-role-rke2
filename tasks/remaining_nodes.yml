---
- name: Create the RKE2 config dir
  ansible.builtin.file:
    state: directory
    path: /etc/rancher/rke2
    owner: root
    group: root
    mode: 0755

- name: Set server taints
  ansible.builtin.set_fact:
    combined_node_taints: "{{ rke2_server_node_taints }}"
  when: rke2_type == 'server'

- name: Set agent taints
  ansible.builtin.set_fact:
    combined_node_taints: "{{ rke2_agent_node_taints }}"
  when: rke2_type == 'agent'

- name: Copy RKE2 config
  ansible.builtin.template:
    src: "{{ rke2_config }}"
    dest: /etc/rancher/rke2/config.yaml
    owner: root
    group: root
    mode: 0600
  notify: "Config file changed"

- name: Copy kubelet config
  ansible.builtin.template:
    src: templates/kubelet-config.yaml.j2
    dest: /etc/rancher/rke2/kubelet-config.yaml
    owner: root
    group: root
    mode: 0600
  when: rke2_kubelet_config | length > 0
  notify: "Config file changed"

- name: Copy Containerd Registry Configuration file
  ansible.builtin.template:
    src: "{{ rke2_custom_registry_path }}"
    dest: /etc/rancher/rke2/registries.yaml
    owner: root
    group: root
    mode: 0600
  when: (rke2_custom_registry_mirrors | length > 0 or rke2_custom_registry_configs | length > 0)
  notify: "Config file changed"

- name: Fail if the cluster already has a <hostname>.node-password.rke2 secret and the node doesn't have a password file
  block:
    - name: Get list of existing node secrets
      when: inventory_hostname is active_server
      ansible.builtin.shell: |
        {{ rke2_data_path }}/bin/kubectl --kubeconfig /etc/rancher/rke2/rke2.yaml \
        get secrets -n kube-system -o jsonpath='{.items[*].metadata.name}' | tr ' ' '\n' | grep -E 'node-password\.rke2$' | sed s/.node-password.rke2//g
      args:
        executable: /bin/bash
      register: nodes_with_passwords # A node name on each line
    - name: Set fact for existing node passwords
      ansible.builtin.set_fact:
        nodes_with_existing_passwords: "{{ nodes_with_passwords.stdout_lines }}"
      when: inventory_hostname is active_server
    - name: Warn if the node password already exists and /etc/rancher/node/password does not exist on the node
      ansible.builtin.fail:
        msg: "The node password secret already exists for node name {{ rke2_node_name }}, but no password file exists in /etc/rancher/node/password!\n\
              The node will not be able to join the cluster with this node name without a password file matching the secret.\n\n\
              This can happen for a few reasons:\n\
              - The node was previously part of the cluster and RKE2 was removed without running `kubectl delete node {{ rke2_node_name }}`.\n\
              - The cluster etcd was restored from a backup from before the node was correctly removed from the cluster.\n\n\
              To join this node, please recreate the file with the password, use a different node name (rke2_node_name), or remove the secret from the cluster using:\n\
              kubectl delete secret {{ rke2_node_name}}.node-password.rke2 -n kube-system"
      when: rke2_node_name in nodes_with_existing_passwords
            and not ansible.builtin.stat(path="/etc/rancher/node/password").stat.exists

- name: Start RKE2 service on the rest of the nodes
  ansible.builtin.systemd:
    name: "{{ rke2_service_name }}"
    state: started
    enabled: true
  retries: 10
  delay: 3
  register: result
  until: result is not failed
  environment:
    RKE2_TOKEN: "{{ rke2_token }}"
  notify: "Service (re)started"

- name: Mask other RKE2 service on the rest of the nodes
  ansible.builtin.systemd:
    name: "rke2-{{ item }}.service"
    enabled: false
    masked: true
  with_items:
    - "{{ (['agent', 'server'] | reject('match', rke2_type) | list) }}"

- name: Wait for remaining nodes to be ready - no CNI
  ansible.builtin.shell: |
    {{ rke2_data_path }}/bin/kubectl --kubeconfig /etc/rancher/rke2/rke2.yaml get node "{{ item }}" -o jsonpath='{range .status.conditions[*]}{.message}{"\n"}{end}'
  args:
    executable: /bin/bash
  changed_when: false
  register: node_status
  until:
    - '"kubelet has sufficient memory available"  in node_status.stdout_lines'
    - '"kubelet has no disk pressure"  in node_status.stdout_lines'
    - '"kubelet has sufficient PID available"  in node_status.stdout_lines'
    - ('"cni plugin not initialized" in node_status.stdout' or '"kubelet is posting ready status." in node_status.stdout')
  retries: 100
  delay: 15
  loop: "{{ groups[rke2_cluster_group_name] }}"
  when:
    - rke2_cni == 'none'
    - inventory_hostname == active_server or inventory_hostname == groups[rke2_servers_group_name].0

- name: Wait for remaining nodes to be ready - with CNI
  ansible.builtin.shell: |
    set -o pipefail
    {{ rke2_data_path }}/bin/kubectl --kubeconfig /etc/rancher/rke2/rke2.yaml get nodes | grep " Ready" | wc -l
  args:
    executable: /bin/bash
  changed_when: false
  register: all_ready_nodes
  until: "groups[rke2_cluster_group_name] | length == all_ready_nodes.stdout | int"
  retries: 100
  delay: 15
  when:
    - not ansible_check_mode
    - rke2_cni != 'none'
    - inventory_hostname == active_server or inventory_hostname == groups[rke2_servers_group_name].0
