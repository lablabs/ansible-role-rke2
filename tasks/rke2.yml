---

- name: Download RKE2 installation script
  ansible.builtin.get_url:
    url: "{{ rke2_install_bash_url }}"
    dest: "{{ rke2_install_script_dir }}/rke2.sh"

- name: Set the permissions for the file
  file:
    dest: "{{ rke2_install_script_dir }}/rke2.sh"
    mode: 0700

- name: Create RKE2 artifact's folder
  file:
    path: "{{rke2_artifact_path}}"
    state: directory
  when: rle2-airgap-mode

- name: Download RKE2 artifact's
  ansible.builtin.get_url:
    url: "{{ rke2_artifact_url }}/{{ rke2_version }}/{{ item }}"
    dest: "{{ rke2_artifact_path }}/{{ item }}"
    mode: 0644
  with_items: "{{ rke2_artifact }}"
  when: rle2-airgap-mode

- name: Populate service facts
  service_facts:

- name: Check RKE2 version
  ansible.builtin.shell: |
    set -o pipefail
    /usr/local/bin/rke2 --version | grep -E "rke2 version" | awk '{print $3}'
  args:
    executable: /bin/bash
  changed_when: false
  register: installed_rke2_version
  when: '"rke2-server.service" in ansible_facts.services'

- name: Run AirGap RKE2 script
  ansible.builtin.command:
    cmd: "{{ rke2_install_script_dir }}/rke2.sh"
  environment:
    INSTALL_RKE2_ARTIFACT_PATH: "{{rke2_artifact_path }}"
  when: (rke2_version != ( installed_rke2_version.stdout | default({})))
        or (installed_rke2_version is not defined) and (rle2-airgap-mode)

- name: Run RKE2 script
  ansible.builtin.command:
    cmd: "{{ rke2_install_script_dir }}/rke2.sh"
  environment:
    INSTALL_RKE2_VERSION: "{{ rke2_version }}"
    INSTALL_RKE2_CHANNEL_URL: "{{ rke2_channel_url }}"
    INSTALL_RKE2_CHANNEL: "{{ rke2_channel }}"
    INSTALL_RKE2_METHOD: "{{ rke2_method }}"
  when: (rke2_version != ( installed_rke2_version.stdout | default({})))
        or installed_rke2_version is not defined and (rle2-airgap-mode == false)

- name: Copy Custom Manifests
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: /var/lib/rancher/rke2/server/manifests/
    owner: root
    group: root
    mode: 0644
  with_items: "{{ rke2_custom_manifests }}"
  when: rke2_custom_manifests

- name: Copy Static Pods
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: /var/lib/rancher/rke2/agent/pod-manifests/
    owner: root
    group: root
    mode: 0644
  with_items: "{{ rke2_static_pods }}"
  when: rke2_static_pods
